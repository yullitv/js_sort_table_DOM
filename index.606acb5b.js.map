{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MAiCvC,EAAM,gBAAgB,CAAC,QAXvB,SAAkB,CAAC,EACjB,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,MAEhC,GAAI,EAAQ,CACV,IAxB4B,EACxB,EAuBE,EAAc,MAAM,IAAI,CAAC,GAAS,OAAO,CAAC,GAxBpB,EAyBV,AAAgB,IAAhB,GAAqB,AAAgB,IAAhB,EAtBzC,CAFM,EAAO,MAAM,IAAI,CAAC,EAAM,IAAI,EAAE,KAAK,CAAC,EAAG,KAExC,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAQ,EAAK,KAAK,CAuBd,EAvB2B,CAAC,WAAW,CAAC,IAAI,GAChD,EAAQ,EAAK,KAAK,CAsBd,EAtB2B,CAAC,WAAW,CAAC,IAAI,UAEtD,AAAI,EAIK,AAHM,WAAW,EAAM,OAAO,CAAC,WAAY,KACrC,WAAW,EAAM,OAAO,CAAC,WAAY,KAI3C,EAAM,aAAa,CAAC,EAE/B,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAWxC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nfunction sortTable(columnIndex, isNumeric) {\n    var rows = Array.from(table.rows).slice(1, -1);\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[columnIndex].textContent.trim();\n        var cellB = rowB.cells[columnIndex].textContent.trim();\n        if (isNumeric) {\n            var numA = parseFloat(cellA.replace(/[^\\d.-]/g, \"\"));\n            var numB = parseFloat(cellB.replace(/[^\\d.-]/g, \"\"));\n            return numA - numB;\n        } else return cellA.localeCompare(cellB);\n    });\n    rows.forEach(function(row) {\n        return table.appendChild(row);\n    });\n}\nfunction newTitle(e) {\n    var header = e.target.closest(\"th\");\n    if (header) {\n        var columnIndex = Array.from(headers).indexOf(header);\n        var isNumeric = columnIndex === 2 || columnIndex === 3;\n        sortTable(columnIndex, isNumeric);\n    }\n}\ntable.addEventListener(\"click\", newTitle);\n\n//# sourceMappingURL=index.606acb5b.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\n\nfunction sortTable(columnIndex, isNumeric) {\n  const rows = Array.from(table.rows).slice(1, -1);\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].textContent.trim();\n    const cellB = rowB.cells[columnIndex].textContent.trim();\n\n    if (isNumeric) {\n      const numA = parseFloat(cellA.replace(/[^\\d.-]/g, ''));\n      const numB = parseFloat(cellB.replace(/[^\\d.-]/g, ''));\n\n      return numA - numB;\n    } else {\n      return cellA.localeCompare(cellB);\n    }\n  });\n\n  rows.forEach((row) => table.appendChild(row));\n}\n\nfunction newTitle(e) {\n  const header = e.target.closest('th');\n\n  if (header) {\n    const columnIndex = Array.from(headers).indexOf(header);\n    const isNumeric = columnIndex === 2 || columnIndex === 3;\n\n    sortTable(columnIndex, isNumeric);\n  }\n}\n\ntable.addEventListener('click', newTitle);\n"],"names":["table","document","querySelector","headers","querySelectorAll","addEventListener","e","header","target","closest","isNumeric","rows","columnIndex","Array","from","indexOf","slice","sort","rowA","rowB","cellA","cells","textContent","trim","cellB","numA","parseFloat","replace","localeCompare","forEach","row","appendChild"],"version":3,"file":"index.606acb5b.js.map"}